"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8243],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=c(n),h=r,g=s["".concat(u,".").concat(h)]||s[h]||d[h]||i;return n?a.createElement(g,l(l({ref:t},p),{},{components:n})):a.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=h;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[s]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},6350:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={description:"Want to contribute back to Dispatch? These pages describe the general development flow, our philosophy, the test suite, and issue tracking."},l="Contributing",o={unversionedId:"contributing/introduction",id:"contributing/introduction",title:"Contributing",description:"Want to contribute back to Dispatch? These pages describe the general development flow, our philosophy, the test suite, and issue tracking.",source:"@site/docs/contributing/introduction.mdx",sourceDirName:"contributing",slug:"/contributing/introduction",permalink:"/dispatch/docs/contributing/introduction",draft:!1,editUrl:"https://github.com/netflix/dispatch/edit/master/docs/docs/contributing/introduction.mdx",tags:[],version:"current",frontMatter:{description:"Want to contribute back to Dispatch? These pages describe the general development flow, our philosophy, the test suite, and issue tracking."}},u={},c=[{value:"Documentation",id:"documentation",level:2},{value:"Doing a release",id:"doing-a-release",level:2},{value:"Updating sample data",id:"updating-sample-data",level:3},{value:"Bumping the version number",id:"bumping-the-version-number",level:3},{value:"Change log",id:"change-log",level:3},{value:"Update &#39;latest&#39; tag",id:"update-latest-tag",level:3}],p={toc:c},s="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"contributing"},"Contributing"),(0,r.kt)("h2",{id:"documentation"},"Documentation"),(0,r.kt)("p",null,"Dispatch documentation is managed via Gitbook."),(0,r.kt)("h2",{id:"doing-a-release"},"Doing a release"),(0,r.kt)("p",null,"Creating a release of Dispatch requires the step below."),(0,r.kt)("h3",{id:"updating-sample-data"},"Updating sample data"),(0,r.kt)("p",null,"If the database schema changes, we will need to update the sample data accordingly."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Run the Bash script ",(0,r.kt)("inlineCode",{parentName:"li"},"update-example-data.sh")," in the ",(0,r.kt)("inlineCode",{parentName:"li"},"data")," directory."),(0,r.kt)("li",{parentName:"ul"},"Create a commit with any changes"),(0,r.kt)("li",{parentName:"ul"},"Create a pull request with the change"),(0,r.kt)("li",{parentName:"ul"},"Merge change")),(0,r.kt)("h3",{id:"bumping-the-version-number"},"Bumping the version number"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Update the version number in ",(0,r.kt)("inlineCode",{parentName:"li"},"dispatch/__about__.py")),(0,r.kt)("li",{parentName:"ul"},"Create a new entry in the changelog"),(0,r.kt)("li",{parentName:"ul"},"Create a commit with the changelog changes"),(0,r.kt)("li",{parentName:"ul"},"Create a pull request with the change"),(0,r.kt)("li",{parentName:"ul"},"Merge change")),(0,r.kt)("h3",{id:"change-log"},"Change log"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a new changelog with all significant changes since the last release"),(0,r.kt)("li",{parentName:"ul"},"Update GitHub releases: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/Netflix/dispatch/releases"},"https://github.com/Netflix/dispatch/releases")),(0,r.kt)("li",{parentName:"ul"},"Publish the release")),(0,r.kt)("h3",{id:"update-latest-tag"},"Update 'latest' tag"),(0,r.kt)("p",null,"We rely on the latest tag to identify the most current stable version. Follow the steps below to update this tag:"),(0,r.kt)("p",null,"Delete the previous tag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git tag -d latest\n")),(0,r.kt)("p",null,"Create a new tag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git tag -a latest <commit>\n")),(0,r.kt)("p",null,"Push the tag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git push origin latest\n")))}d.isMDXComponent=!0}}]);