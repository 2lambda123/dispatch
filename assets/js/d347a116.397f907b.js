"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2329],{4137:(e,t,i)=>{i.d(t,{Zo:()=>c,kt:()=>g});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(i),f=r,g=p["".concat(s,".").concat(f)]||p[f]||u[f]||a;return i?n.createElement(g,o(o({ref:t},c),{},{components:i})):n.createElement(g,o({ref:t},c))}));function g(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,o=new Array(a);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=i[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}f.displayName="MDXCreateElement"},9801:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var n=i(7462),r=(i(7294),i(4137));const a={},o="Filter",l={unversionedId:"administration/settings/signal/filter",id:"administration/settings/signal/filter",title:"Filter",description:"Signal Filters are used to define how Signals should be grouped together or when they should be snoozed.",source:"@site/docs/administration/settings/signal/filter.mdx",sourceDirName:"administration/settings/signal",slug:"/administration/settings/signal/filter",permalink:"/dispatch/docs/administration/settings/signal/filter",draft:!1,editUrl:"https://github.com/netflix/dispatch/edit/master/docs/docs/administration/settings/signal/filter.mdx",tags:[],version:"current",frontMatter:{},sidebar:"adminSidebar",previous:{title:"Entity Type",permalink:"/dispatch/docs/administration/settings/signal/entity-type"},next:{title:"Contact",permalink:"/dispatch/docs/administration/settings/contact/"}},s={},d=[{value:"Snooze Filter",id:"snooze-filter",level:2},{value:"Deduplication Filter",id:"deduplication-filter",level:2},{value:"Creating a Deduplication Filter",id:"creating-a-deduplication-filter",level:3}],c={toc:d},p="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"filter"},"Filter"),(0,r.kt)("p",null,"Signal Filters are used to define how Signals should be grouped together or when they should be snoozed."),(0,r.kt)("h2",{id:"snooze-filter"},"Snooze Filter"),(0,r.kt)("p",null,"Snooze filters make use of entities extracted from signals to define when a signal should be snoozed.\nFor example, you can create a ",(0,r.kt)("inlineCode",{parentName:"p"},"Snooze Filter")," that will snooze all incoming signals that contain a specific JA3 hash.\nYou also have the option to create a ",(0,r.kt)("inlineCode",{parentName:"p"},"Snooze Filter")," without specifying any entities, which will snooze all incoming signals matching that filter.\nThis feature is useful when an influx of signals is expected for a given period of time (e.g. some known administration activities) and you want to temporarily stop cases from being created. Even when a signal is snoozed it will still be processed and associated entities will be created."),(0,r.kt)("p",null,(0,r.kt)("img",{src:i(8756).Z,width:"804",height:"545"})),(0,r.kt)("h2",{id:"deduplication-filter"},"Deduplication Filter"),(0,r.kt)("p",null,"In order to perform signal duplication, a duplication filter must be created. Deduplication filters leverage extracted signal entity types and a sliding time window in order to determine if a signal should be marked as a duplicate. If a match is found, the current signal is marked as duplicate and it is associated with the existing case."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"By default, all Signals are deduplicated over a one hour window unless a custom Deduplication Filter is defined.")),(0,r.kt)("h3",{id:"creating-a-deduplication-filter"},"Creating a Deduplication Filter"),(0,r.kt)("p",null,"To create a Deduplication Filter, you must first define the Entity Types that will be used to deduplicate Signals."),(0,r.kt)("p",null,(0,r.kt)("img",{src:i(4508).Z,width:"802",height:"541"})))}u.isMDXComponent=!0},4508:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/admin-ui-signal-filter-dedupe-728412be554a1c6996af5414ac4b2dd8.png"},8756:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/admin-ui-signal-filter-snooze-7a57fa5e39c99e74c83a88e5d0277c0b.png"}}]);